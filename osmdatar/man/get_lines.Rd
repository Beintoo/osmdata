% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-lines.R
\name{get_lines}
\alias{get_lines}
\title{get_lines}
\usage{
get_lines(bbox, key, value, extra_pairs, raw_data = FALSE, overpass_data,
  verbose = FALSE)
}
\arguments{
\item{bbox}{the bounding box within which lines should be downloaded.  A
2-by-2 matrix of 4 elements with columns of min and max values, and rows of x
and y values.}

\item{key}{The OpenStreetMap key to be passed to the overpass API query, or
to be extracted from pre-downloaded data passed as \code{url_download}}

\item{value}{OSM value to match to key. If \code{NULL}, all keys will be
returned.  Negation is specified by \code{!value}.}

\item{extra_pairs}{A list of additional \code{key-value} pairs to be passed
to the overpass API.}

\item{raw_data}{If TRUE, \code{get_lines} returns unprocessed data as directly
returned from the overpass API query.}

\item{overpass_data}{Data either returned with \code{raw_data=TRUE} or
directly downloaded from the overpass API. This option exists primarily for
the latter case, for which this function enables data downloaded directly
from the \code{overpass} API to be transformed into \code{sp} objects.}

\item{verbose}{If TRUE, provides notification of progress}
}
\value{
A \code{SpatialLinesDataFrame} object containing all the desires line
objects within the given bounding box.
}
\description{
Extracts lines (such as highways) from an overpass download.
}

